<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="0" tests="8" time="4.861" timestamp="2025-10-14T15:47:23.051219+00:00" hostname="ricardo-Legion-5-15IAH7H"><testcase classname="Tests.integration.test_api_clientes" name="test_crear_y_obtener_cliente" time="0.066" /><testcase classname="Tests.integration.test_catalogo_filters" name="test_planes_por_zona_y_velocidad" time="0.006" /><testcase classname="Tests.integration.test_facturacion_flow" name="test_generar_y_consultar_factura" time="1.038" /><testcase classname="Tests.integration.test_instalaciones_flow" name="test_agendar_despachar_cerrar_instalacion" time="3.632"><failure message="AssertionError: {&quot;detail&quot;:&quot;Provisionamiento fallido&quot;}&#10;assert 502 == 200&#10; +  where 502 = &lt;Response [502]&gt;.status_code">def test_agendar_despachar_cerrar_instalacion():
        # Agendar
        r = requests.post(f"{BASE}/instalaciones/agendar", json={"clienteId": 1, "ventana": "9-12", "zona": "NORTE"})
        assert r.status_code == 200, r.text
        inst_id = r.json()["id"]
        # Despachar
        r2 = requests.put(f"{BASE}/instalaciones/despachar/{inst_id}")
        assert r2.status_code == 200
        # Cerrar sin evidencias -&gt; 400
        r3 = requests.put(f"{BASE}/instalaciones/cerrar/{inst_id}", json={"evidencias": [], "notas": ""})
        assert r3.status_code == 422 or r3.status_code == 400
        # Cerrar con evidencias -&gt; 200 (router emulado)
        r4 = requests.put(f"{BASE}/instalaciones/cerrar/{inst_id}", json={"evidencias": ["http://example/e1.png"], "notas": "ok"})
&gt;       assert r4.status_code == 200, r4.text
E       AssertionError: {"detail":"Provisionamiento fallido"}
E       assert 502 == 200
E        +  where 502 = &lt;Response [502]&gt;.status_code

Tests/integration/test_instalaciones_flow.py:36: AssertionError</failure></testcase><testcase classname="Tests.integration.test_pagos_flow" name="test_procesar_y_obtener_pago" time="0.020" /><testcase classname="Tests.integration.test_rbac_and_whatsapp" name="test_rbac_admin_stats_forbidden_then_ok" time="0.012" /><testcase classname="Tests.integration.test_rbac_and_whatsapp" name="test_whatsapp_webhook_and_template" time="0.006" /><testcase classname="Tests.integration.test_red_idempotency" name="test_corte_idempotente" time="0.007"><failure message="assert 500 == 200&#10; +  where 500 = &lt;Response [500]&gt;.status_code">def test_corte_idempotente():
        headers = {"Idempotency-Key": "cut-1"}
        r1 = requests.post(f"{BASE}/router/cortar", json={"cliente_id": 1}, headers=headers)
&gt;       assert r1.status_code == 200
E       assert 500 == 200
E        +  where 500 = &lt;Response [500]&gt;.status_code

Tests/integration/test_red_idempotency.py:26: AssertionError</failure></testcase></testsuite></testsuites>